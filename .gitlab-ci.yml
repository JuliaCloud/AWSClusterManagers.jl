stages:
  - test
  - online-test
  - coverage
  - docs

# Disable GitLab CI's default cache policy of "pull-push"
# https://docs.gitlab.com/ee/ci/yaml/#cache-policy
# https://docs.gitlab.com/ce/ci/caching/index.html#disabling-cache-on-specific-jobs
cache: {}

.test_shell: &test_shell
  artifacts:
    name: "$CI_JOB_NAME coverage"
    expire_in: 1 week
    paths:
      - "$CI_JOB_NAME coverage/"
  before_script:
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install-cred-helper
    - ./julia-ci install $JULIA_VERSION
  script:
    - source julia-ci export
    - ./julia-ci test
    - ./julia-ci coverage
  after_script:
    - ./julia-ci clean

.test_shell_0_6: &test_shell_0_6
  variables:
    JULIA_VERSION: "0.6"
    ONLINE: ""
  <<: *test_shell

.test_shell_0_7: &test_shell_0_7
  variables:
    JULIA_VERSION: "0.7"
    ONLINE: ""
  <<: *test_shell

.test_shell_nightly: &test_shell_nightly
  variables:
    JULIA_VERSION: "nightly"
    ONLINE: ""
  allow_failure: true
  <<: *test_shell

.test_docker: &test_docker
  artifacts:
    name: coverage
    expire_in: 1 week
    paths:
      - "$CI_JOB_NAME coverage/"
  variables:
    ONLINE: ""
  script:
    - julia -e "Pkg.clone(pwd()); Pkg.build(\"$PKG_NAME\"); Pkg.test(\"$PKG_NAME\"; coverage=true)"
    - julia-coverage $PKG_NAME

.test_docker_0_6: &test_docker_0_6
  image: 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-gitlab-ci:0.6
  <<: *test_docker


"0.6 (Mac)":
  tags:
    - mac
    - shell-ci
  <<: *test_shell_0_6

"0.6 (Linux, 64-bit)":
  tags:
    - linux
    - 64-bit
    - docker-ci
  <<: *test_docker_0_6

"0.6 (Linux, 32-bit)":
  tags:
    - linux
    - 32-bit
    - shell-ci
  <<: *test_shell_0_6

"0.7 (Mac)":
  tags:
    - mac
    - shell-ci
  <<: *test_shell_0_7

"0.7 (Linux, 64-bit)":
  tags:
    - linux
    - 64-bit
    - shell-ci
  <<: *test_shell_0_7

"0.7 (Linux, 32-bit)":
  tags:
    - linux
    - 32-bit
    - shell-ci
  <<: *test_shell_0_7

"Nightly (Mac)":
  tags:
    - mac
    - shell-ci
  <<: *test_shell_nightly

"Nightly (Linux, 64-bit)":
  tags:
    - linux
    - 64-bit
    - shell-ci
  <<: *test_shell_nightly

"Nightly (Linux, 32-bit)":
  tags:
    - linux
    - 32-bit
    - shell-ci
  <<: *test_shell_nightly

# Online test run as a separate stage to avoid running these expensive tests if the basic tests fail.
"Online Tests":
  stage: online-test
  tags:
    - linux
    - docker
    - ecr
    - batch
  artifacts:
    name: "$CI_JOB_NAME coverage"
    expire_in: 1 week
    paths:
      - "$CI_JOB_NAME coverage/"
  variables:
    AWS_STACKNAME: aws-batch-manager-test
    ONLINE: "docker, batch"  # Runs the online tests for AWS Batch & Docker
    JULIA_VERSION: "0.6"
  before_script:
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install-cred-helper
    - ./julia-ci install $JULIA_VERSION
  script:
    - source julia-ci export
    - export PATH="$PATH:/usr/local/bin"
    - unset SSL_CERT_DIR
    - ./julia-ci test
    - ./julia-ci coverage
  after_script:
    - ./julia-ci clean
    - sleep 5
    - "ACCOUNT_ID=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | grep -oP '(?<=\"accountId\" : \")[^\"]*(?=\")')"
    - "REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | grep -oP '(?<=\"region\" : \")[^\"]*(?=\")')"
    - docker rmi $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/aws-batch-manager-test:$(git rev-parse --short $CI_COMMIT_SHA)


"Coverage":
  stage: coverage
  image: 292522074875.dkr.ecr.us-east-1.amazonaws.com/julia-gitlab-ci:0.6
  coverage: /Test Coverage (\d+\.\d+%)/
  artifacts:
    name: combined_coverage
    expire_in: 1 week
    paths:
      - combined_coverage/
  tags:
    - linux
    - docker-ci
  script:
    - genhtml --version
    - mkdir $CI_PROJECT_DIR/combined_coverage
    - cp -r $CI_PROJECT_DIR/src $CI_PROJECT_DIR/combined_coverage/
    - ls */*.info | xargs -I{} echo "--summary \"{}\"" | xargs lcov --directory src
    - echo "Test Coverage $(genhtml -o $CI_PROJECT_DIR/combined_coverage --no-prefix */coverage.info 2>&1 | grep lines | awk '{print $2}')"
    - find $CI_PROJECT_DIR/combined_coverage -type f -name "*.jl" -delete


"Documentation":
  stage: docs
  tags:
    - docs
    - shell-ci
  only:
    - master
    - develop
    - docs
    - tags  # special keyword for all tags
  variables:
    JULIA_VERSION: "0.6"
  before_script:
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install $JULIA_VERSION
  script:
    - source julia-ci export
    - julia --depwarn=no -e "Pkg.clone(pwd()); Pkg.build(\"$PKG_NAME\"); Pkg.add(\"Documenter\")"
    - julia --depwarn=no -e "cd(Pkg.dir(\"$PKG_NAME\", \"docs\")); include(\"make.jl\")"
    - julia --depwarn=no -e "const DOCS_DIR = joinpath(\"/mnt\", \"docs\", \"$CI_PROJECT_NAMESPACE\", \"$CI_PROJECT_NAME\", \"$CI_BUILD_REF_NAME\"); mkpath(DOCS_DIR); cp(Pkg.dir(\"$PKG_NAME\", \"docs\", \"build\"), DOCS_DIR; remove_destination=true, follow_symlinks=true)"
  after_script:
    - ./julia-ci clean
