stages:
  - test
  - docs

.test_template: &test_definition
  before_script:
    - curl -s -o setup-julia https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/setup-julia
    - chmod +x setup-julia
    - ./setup-julia install $JULIA_VERSION
  script:
    - source setup-julia export
    - julia -e "Pkg.clone(pwd()); Pkg.build(\"$PKG_NAME\"); Pkg.test(\"$PKG_NAME\"; coverage=true)"
    - julia --depwarn=no -e "cd(Pkg.dir(\"$PKG_NAME\")); Pkg.add(\"Coverage\"); using Coverage; c, t = get_summary(process_folder()); @printf(\"Test Coverage %.2f%%\\n\", c/t * 100)"
  after_script:
    - ./setup-julia clean

.test_tmp_release: &test_release
  variables:
    JULIA_VERSION: release
  <<: *test_definition

.test_tmp_nightly: &test_nightly
  variables:
    JULIA_VERSION: nightly
  allow_failure: true
  <<: *test_definition


"Julia release, OS X":
  tags:
    - osx
  <<: *test_release

"Julia release, Linux (amd64)":
  tags:
    - linux
    - amd64
  <<: *test_release

"Julia release, Linux (i386)":
  tags:
    - linux
    - i386
  <<: *test_release

# Note: Julia 0.6 tests have issues with AWSClusterManagers.jl and sometimes cause the CI build to hang. 
# We cannot use "allow_failure" here as the processes don't fail they just get stuck.

# "Julia nightly, OS X":
#   tags:
#     - osx
#   <<: *test_nightly

# "Julia nightly, Linux (amd64)":
#   tags:
#     - linux
#     - amd64
#   <<: *test_nightly

# "Julia nightly, Linux (i386)":
#   tags:
#     - linux
#     - i386
#   <<: *test_nightly

"Documentation":
  stage: docs
  tags:
    - docs
  only:
    - master
    - develop
    - docs
    - tags  # special keyword for all tags
  before_script:
    - curl -s -o setup-julia https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/setup-julia
    - chmod +x setup-julia
    - ./setup-julia install release
  script:
    - source setup-julia export
    - julia --depwarn=no -e "Pkg.clone(pwd()); Pkg.build(\"$PKG_NAME\"); Pkg.add(\"Documenter\"); Pkg.checkout(\"Documenter\")"
    - julia --depwarn=no -e "cd(Pkg.dir(\"$PKG_NAME\", \"docs\")); include(\"make.jl\")"
    - julia --depwarn=no -e "const DOCS_DIR = joinpath(\"/mnt\", \"docs\", \"$CI_PROJECT_NAMESPACE\", \"$CI_PROJECT_NAME\", \"$CI_BUILD_REF_NAME\"); mkpath(DOCS_DIR); cp(Pkg.dir(\"$PKG_NAME\", \"docs\", \"build\"), DOCS_DIR; remove_destination=true, follow_symlinks=true)"
  after_script:
    - ./setup-julia clean
